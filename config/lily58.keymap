/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define BT 3

/ {
    combos {
        compatible = "zmk,combos";
        combo_bt_layer {
            timeout-ms = <50>;
            key-positions = <52 55>;
            bindings = <&mo 3>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";
        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BSLH  |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |    [   |  |   ]   |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |
            bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                     &kp N6 &kp N7   &kp N8    &kp N9  &kp N0         &kp GRAVE
&kp TAB   &kp Q  &kp W  &kp E    &kp R    &kp T                      &kp Y  &kp U    &kp I     &kp O   &kp P          &kp BSLH
&kp LCTRL &kp A  &kp S  &kp D    &kp F    &kp G                      &kp H  &kp J    &kp K     &kp L   &kp SEMI       &kp APOS
&kp LSHFT &kp Z  &kp X  &kp C    &kp V    &kp B  &kp LBKT   &kp RBKT &kp N  &kp M    &kp COMMA &kp DOT &mt RCTRL FSLH &kp RSHFT
                        &kp LALT &kp LGUI &mo 1  &kp SPACE  &kp RET  &mo 2  &kp BSPC &kp RGUI
            >;
        };
        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
// |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |       |
// |       |     |     |      |      |      |        |  |       |  =   |  -    |  +    |      |       |       |
//                     |      |      |      |        |  |       |      |  ALT  |       |
            bindings = <
&trans    &trans   &trans &trans   &trans     &trans                        &trans    &trans    &trans          &trans    &trans    &trans
&kp F1    &kp F2   &kp F3 &kp F4   &kp F5     &kp F6                        &kp F7    &kp F8    &kp F9          &kp F10   &kp F11   &kp F12
&kp GRAVE &kp EXCL &kp AT &kp HASH &kp DOLLAR &kp PRCNT                     &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &trans
&trans    &trans   &trans &trans   &trans     &trans    &kp LBRC   &kp RBRC &kp EQUAL &kp MINUS &kp KP_PLUS     &trans    &trans    &trans
                          &trans   &trans     &trans    &trans     &trans   &trans    &kp RALT  &trans
            >;
        };
        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      | MUTE  | PAUSE |      |       |       |
// |       |     |     |      |      |      |                   | PREV |VOL_DN |VOL_UP | NEXT |       |       |
// |       |     |     |      |      |      |                   | LEFT | DOWN  |  UP   | RIGHT|       |       |
// |       |     |     |      |      |      |        |  |       |      |       |       |      |       |       |
//                     |      |      |      |        |  |       |      |  DEL  |       |
            bindings = <
&trans    &trans &trans &trans &trans &trans                    &trans     &kp C_MUTE   &kp C_PP     &trans     &trans &trans
&trans    &trans &trans &trans &trans &trans                    &kp C_PREV &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT &trans &trans
&trans    &trans &trans &trans &trans &trans                    &kp LEFT   &kp DOWN     &kp UP       &kp RIGHT  &trans &trans
&trans    &trans &trans &trans &trans &trans &trans      &trans &trans     &trans       &trans       &trans     &trans &trans
                        &trans &trans &trans &trans      &trans &trans     &kp DEL      &trans
            >;
        };
        bluetooth_layer {
// ------------------------------------------------------------------------------------------------------------
// |       | BT1 | BT2 |  BT3 | BT4  | BT5  |                   |BT CLR|       |       |      |       |       |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      | USB OUT|  | BT OUT|      |       |       |      |       |       |
//                     |      |      |      |        |  |       |      |       |       |
            bindings = <
&trans    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                         &bt BT_CLR &trans &trans &trans &trans &trans
&trans    &trans       &trans       &trans       &trans       &trans                               &trans     &trans &trans &trans &trans &trans
&trans    &trans       &trans       &trans       &trans       &trans                               &trans     &trans &trans &trans &trans &trans
&trans    &trans       &trans       &trans       &trans       &trans &out OUT_USB     &out OUT_BLE &trans     &trans &trans &trans &trans &trans
                                    &trans       &trans       &trans &trans           &trans       &trans     &trans &trans
            >;
        };
    };
};
